<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Quick Start on Coat — Config of Annotated Types</title><link>https://poiu-de.github.io/coat/docs/quick_start/</link><description>Recent content in Quick Start on Coat — Config of Annotated Types</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://poiu-de.github.io/coat/docs/quick_start/index.xml" rel="self" type="application/rss+xml"/><item><title>Prerequisites</title><link>https://poiu-de.github.io/coat/docs/quick_start/01_prerequisites/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://poiu-de.github.io/coat/docs/quick_start/01_prerequisites/</guid><description>Coat has no runtime dependencies on other libraries.
The annotation processor has some dependencies on other libraries (which is why it is recommended to use maven as it resolves those dependencies automatically), but none of them are needed at runtime.
Coat can be used with Java 11 or higher.</description></item><item><title>Installation</title><link>https://poiu-de.github.io/coat/docs/quick_start/02_installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://poiu-de.github.io/coat/docs/quick_start/02_installation/</guid><description>Coat consists of two separate jars.
The annotation processor to generate the config classes. Only needed at compile time. The runtime package containing the common base class for all generated config classes and the default type converters. Needed at runtime. To use Coat in a maven based project use the following maven coordinates:
1 &amp;lt;!-- Contains the annotation processor. Not needed at runtime. --&amp;gt; 2 &amp;lt;dependency&amp;gt; 3 &amp;lt;groupId&amp;gt;de.poiu.coat&amp;lt;/groupId&amp;gt; 4 &amp;lt;artifactId&amp;gt;coat-processor&amp;lt;/artifactId&amp;gt; 5 &amp;lt;version&amp;gt;0.</description></item><item><title>Usage</title><link>https://poiu-de.github.io/coat/docs/quick_start/03_usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://poiu-de.github.io/coat/docs/quick_start/03_usage/</guid><description>Create config interface Write an interface with accessor methods for each config entry your application supports. The accessor methods can return the concrete types you want your config entry to be. There is a number of types that are supported by default, but custom types can be registered to support additional types.
Config values that are optional, must be of type java.util.Optional or the more specialized variants OptionalInt, OptionalLong or OptionalDouble.</description></item></channel></rss>